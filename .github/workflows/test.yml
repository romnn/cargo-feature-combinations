name: test

on: [push, pull_request, workflow_call]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Test
        run: cargo test --all-targets

      - name: Lint
        continue-on-error: true
        run: >-
          cargo clippy
          --tests
          --benches
          --examples
          -- -Dclippy::all -Dclippy::pedantic

  feature-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.feature-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: romnn/cargo-feature-combinations@main

      - name: Compute feature matrix
        id: feature-matrix
        run: >-
          echo "matrix=$(cargo fc matrix)"
          >> "$GITHUB_OUTPUT"

      - name: Print feature matrix
        run: |
          echo "${{ steps.feature-matrix.outputs.matrix }}"

  test-features:
    name: test ${{ matrix.package.name }} (${{ matrix.package.features }})
    runs-on: ubuntu-latest
    needs: [feature-matrix]
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.feature-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Test
        run: >-
          cargo test
          --package "${{ matrix.package.name }}"
          --features "${{ matrix.package.features }}"
          --all-targets

  publish:
    name: publish (dry-run)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Publish crates (dry-run)
        uses: romnn/publish-crates@main
        with:
          dry-run: true
          resolve-versions: true
