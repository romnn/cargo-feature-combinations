# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

dist: goreleaser-dist

before:
  hooks:
    - rustup default stable
    - cargo install --force --locked cargo-zigbuild

homebrew_casks:
  - name: &cargo-feature-combinations cargo-feature-combinations
    ids:
      - *cargo-feature-combinations
    description: "Plugin for `cargo` to run commands against selected combinations of features."
    directory: Casks
    conflicts:
      - formula: *cargo-feature-combinations
    commit_author:
      name: romnn
      email: contact@romnn.com
    repository:
      owner: romnn
      name: homebrew-tap
      branch: main
      token: "{{ .Env.TAP_GITHUB_TOKEN }}"
      pull_request:
        enabled: false
    hooks:
      post:
        install: |
          if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
            system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/cargo-feature-combinations"]
          end
  - name: &cargo-fc cargo-fc
    ids:
      - *cargo-fc
    description: "Plugin for `cargo` to run commands against selected combinations of features."
    directory: Casks
    conflicts:
      - formula: *cargo-fc
    commit_author:
      name: romnn
      email: contact@romnn.com
    repository:
      owner: romnn
      name: homebrew-tap
      branch: main
      token: "{{ .Env.TAP_GITHUB_TOKEN }}"
      pull_request:
        enabled: false
    hooks:
      post:
        install: |
          if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
            system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/cargo-fc"]
          end

builds:
  # cargo-feature-combinations binary
  - id: *cargo-feature-combinations
    builder: rust
    binary: *cargo-feature-combinations
    targets:
      # linux
      - x86_64-unknown-linux-musl
      - aarch64-unknown-linux-musl
      # apple
      - x86_64-apple-darwin
      - aarch64-apple-darwin
      # windows
      - x86_64-pc-windows-gnu
      - aarch64-pc-windows-gnullvm
    dir: ./
    tool: cargo
    command: zigbuild
    flags:
      - "--release"
      - "--package=cargo-feature-combinations"
      - "--bin=cargo-feature-combinations"
      - "--target-dir=./target" # TODO: can we remove this once rust support is better?

  # cargo-fc binary
  - id: *cargo-fc
    builder: rust
    binary: *cargo-fc
    targets:
      # linux
      - x86_64-unknown-linux-musl
      - aarch64-unknown-linux-musl
      # apple
      - x86_64-apple-darwin
      - aarch64-apple-darwin
      # windows
      - x86_64-pc-windows-gnu
      - aarch64-pc-windows-gnullvm
    dir: ./
    tool: cargo
    command: zigbuild
    flags:
      - "--release"
      - "--package=cargo-feature-combinations"
      - "--bin=cargo-fc"
      - "--target-dir=./target" # TODO: can we remove this once rust support is better?

archives:
  - id: *cargo-feature-combinations
    formats: ["tar.gz"]
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    ids:
      - *cargo-feature-combinations
    files:
      - LICENSE
    format_overrides:
      - goos: windows
        formats: ["zip"]
  - id: *cargo-fc
    formats: ["tar.gz"]
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    ids:
      - *cargo-fc
    files:
      - LICENSE
    format_overrides:
      - goos: windows
        formats: ["zip"]

checksum:
  name_template: "checksums.txt"

changelog:
  use: github
  filters:
    exclude:
      - "^ci:"
      - "^docs:"
      - "^test:"

release:
  draft: false
